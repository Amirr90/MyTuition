Index: app/src/main/res/layout/fragment_tuition_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".TuitionListFragment\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView20\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginLeft=\"15dp\"\r\n        android:layout_marginTop=\"26dp\"\r\n        android:layout_marginRight=\"15dp\"\r\n        android:drawableEnd=\"@drawable/ic_baseline_history_toggle_off_24\"\r\n        android:drawablePadding=\"@dimen/_10sdp\"\r\n        android:fontFamily=\"@font/poppins_semibold\"\r\n        android:paddingEnd=\"@dimen/_10sdp\"\r\n        android:text=\"@string/tuition_history\"\r\n        android:textColor=\"#262E3F\"\r\n        android:textSize=\"19sp\"\r\n        android:textStyle=\"bold\"\r\n        tools:ignore=\"RtlSymmetry\" />\r\n\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/prescriptionRec\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_marginLeft=\"10dp\"\r\n        android:layout_marginTop=\"@dimen/_10sdp\"\r\n        android:layout_marginRight=\"10dp\"\r\n        android:nestedScrollingEnabled=\"false\"\r\n        android:paddingBottom=\"40dp\"\r\n        android:visibility=\"gone\"\r\n        app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\r\n        tools:listitem=\"@layout/tuition_list_view\" />\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/noDataLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_margin=\"@dimen/_10sdp\"\r\n        android:visibility=\"gone\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView11\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:src=\"@drawable/ic_baseline_format_list_numbered_24\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:tint=\"@color/colorAccent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView24\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"27dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:fontFamily=\"@font/poppins\"\r\n            android:text=\"No Data Found !!\"\r\n            android:textColor=\"@color/colorAccent\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/imageView11\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/imageView11\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/imageView11\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/btnRetry\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"35dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/round_for_search\"\r\n            android:backgroundTint=\"@color/colorAccent\"\r\n            android:fontFamily=\"@font/poppins_semibold\"\r\n            android:text=\"@string/try_again\"\r\n            android:textAllCaps=\"true\"\r\n            android:textColor=\"@android:color/white\"\r\n            android:textSize=\"12sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/textView24\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/textView24\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/textView24\" />\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_tuition_list.xml	(revision d314e12e08beff10c1e26afff476a3a2b0496440)
+++ app/src/main/res/layout/fragment_tuition_list.xml	(date 1626247555209)
@@ -14,7 +14,6 @@
         android:layout_marginLeft="15dp"
         android:layout_marginTop="26dp"
         android:layout_marginRight="15dp"
-        android:drawableEnd="@drawable/ic_baseline_history_toggle_off_24"
         android:drawablePadding="@dimen/_10sdp"
         android:fontFamily="@font/poppins_semibold"
         android:paddingEnd="@dimen/_10sdp"
@@ -22,7 +21,8 @@
         android:textColor="#262E3F"
         android:textSize="19sp"
         android:textStyle="bold"
-        tools:ignore="RtlSymmetry" />
+        tools:ignore="RtlSymmetry"
+        android:drawableEndCompat="@drawable/ic_baseline_history_toggle_off_24" />
 
 
     <androidx.recyclerview.widget.RecyclerView
Index: .idea/shelf/Uncommitted_changes_before_Update_at_7_7_2021_3_18_PM_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_7_7_2021_3_18_PM_[Default_Changelist]/shelved.patch	(revision d314e12e08beff10c1e26afff476a3a2b0496440)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_7_7_2021_3_18_PM_[Default_Changelist]/shelved.patch	(revision d314e12e08beff10c1e26afff476a3a2b0496440)
@@ -1,40 +0,0 @@
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_6_28_2021_2_44_PM_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_6_28_2021_2_44_PM_[Default_Changelist]/shelved.patch	(revision de09e59bbe5a479302c70f5a0f7dacab9b1c7dca)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_6_28_2021_2_44_PM_[Default_Changelist]/shelved.patch	(revision de09e59bbe5a479302c70f5a0f7dacab9b1c7dca)
-@@ -1,25 +0,0 @@
--Index: app/src/main/java/com/mytuition/utility/AppUtils.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.mytuition.utility;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.ContentResolver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.net.Uri;\r\nimport android.os.IBinder;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.webkit.MimeTypeMap;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.tasks.OnCanceledListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.OnProgressListener;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.google.gson.Gson;\r\nimport com.mytuition.R;\r\nimport com.mytuition.interfaces.ApiInterface;\r\nimport com.mytuition.interfaces.UploadImageInterface;\r\nimport com.mytuition.models.CalendarModel;\r\nimport com.mytuition.models.SpecialityModel;\r\nimport com.mytuition.models.TeacherModel;\r\nimport com.mytuition.models.TimeSlotModel;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.json.JSONTokener;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.sql.Timestamp;\r\nimport java.text.NumberFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.GregorianCalendar;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\nimport static android.content.Context.MODE_PRIVATE;\r\n\r\n\r\npublic class AppUtils {\r\n    private static final String TAG = \"AppUtils\";\r\n    public static Toast mToast;\r\n\r\n    private static final int SECOND_MILLIS = 1000;\r\n    private static final int MINUTE_MILLIS = 60 * SECOND_MILLIS;\r\n    private static final int HOUR_MILLIS = 60 * MINUTE_MILLIS;\r\n    private static final int DAY_MILLIS = 24 * HOUR_MILLIS;\r\n    static ProgressDialog progressDialog;\r\n\r\n    public static final String MY_PREFS_NAME = \"myPref\";\r\n    static int uploadImageCounter = 0;\r\n\r\n\r\n    public static List<String> getAllSpeciality() {\r\n        List<String> speciality = new ArrayList<>();\r\n        speciality.add(\"English\");\r\n        speciality.add(\"Hindi\");\r\n        speciality.add(\"Maths\");\r\n        speciality.add(\"Science\");\r\n        speciality.add(\"Computer\");\r\n        speciality.add(\"Java\");\r\n        speciality.add(\"Physics\");\r\n        speciality.add(\"Hindi\");\r\n        speciality.add(\"Chemistry\");\r\n        speciality.add(\"All Subject\");\r\n        return speciality;\r\n    }\r\n\r\n    public static String getMimeType(Context context, Uri uri) {\r\n        String mimeType = null;\r\n        if (uri.getScheme().equals(ContentResolver.SCHEME_CONTENT)) {\r\n            ContentResolver cr = context.getContentResolver();\r\n            mimeType = cr.getType(uri);\r\n        } else {\r\n            String fileExtension = MimeTypeMap.getFileExtensionFromUrl(uri\r\n                    .toString());\r\n            mimeType = MimeTypeMap.getSingleton().getMimeTypeFromExtension(\r\n                    fileExtension.toLowerCase());\r\n        }\r\n        return mimeType;\r\n    }\r\n\r\n\r\n    public static List<TimeSlotModel.TimeDetails> getSlots(boolean b, int i, int i1) {\r\n        List<TimeSlotModel.TimeDetails> s1 = new ArrayList<>();\r\n        ArrayList<String> results = getTimeSet(b, i, i1, 60);\r\n        for (String s : results)\r\n            s1.add(new TimeSlotModel.TimeDetails(s, false));\r\n        return s1;\r\n    }\r\n\r\n    public static ArrayList<String> getTimeSet(boolean isCurrentDay, int from, int to, int duration) {\r\n        double hrs = (float) duration / 60;\r\n        Log.d(TAG, \"getTimeSet: hrs \" + (int) ((to - from) / hrs));\r\n        ArrayList results = new ArrayList<String>();\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"hh:mm a\");\r\n        Calendar calendar = new GregorianCalendar();\r\n        calendar.set(Calendar.HOUR_OF_DAY, 0);// what should be the default?\r\n        if (!isCurrentDay)\r\n            calendar.set(Calendar.HOUR_OF_DAY, from);\r\n        calendar.set(Calendar.MINUTE, 0);\r\n        calendar.set(Calendar.SECOND, 0);\r\n        int count = (int) ((to - from) / hrs);\r\n        for (int i = 0; i < count; i++) {\r\n\r\n            String day1 = sdf.format(calendar.getTime());\r\n            calendar.add(Calendar.MINUTE, duration);\r\n\r\n            String day2 = sdf.format(calendar.getTime());\r\n\r\n            String day = day1 + \" - \" + day2;\r\n\r\n            results.add(i, day);\r\n\r\n        }\r\n        return results;\r\n    }\r\n\r\n\r\n    public static List<CalendarModel> getNextWeekDays() {\r\n        List<CalendarModel> calendarModelList = new ArrayList<>();\r\n        ArrayList<HashMap<String, String>> getNextWeekDays = getNextWeekDay();\r\n        for (int a = 1; a < getNextWeekDays.size(); a++) {\r\n            calendarModelList.add(new CalendarModel(\r\n                    getNextWeekDays.get(a).get(\"date\"),\r\n                    getNextWeekDays.get(a).get(\"day\"),\r\n                    getNextWeekDays.get(a).get(\"dateSend\")));\r\n        }\r\n        return calendarModelList;\r\n    }\r\n\r\n    public static void showRequestDialog(Activity activity) {\r\n\r\n\r\n        try {\r\n            if (!((Activity) activity).isFinishing()) {\r\n                if (progressDialog == null) {\r\n                    progressDialog = new ProgressDialog(activity);\r\n                    progressDialog = ProgressDialog.show(activity, null, null, false, true);\r\n                    progressDialog.getWindow().setBackgroundDrawable(new ColorDrawable(activity.getResources().getColor(android.R.color.transparent)));\r\n                    progressDialog.setContentView(R.layout.progress_bar);\r\n                    progressDialog.show();\r\n                } else {\r\n                    progressDialog = ProgressDialog.show(activity, null, null, false, true);\r\n                    progressDialog.getWindow().setBackgroundDrawable(new ColorDrawable(activity.getResources().getColor(android.R.color.transparent)));\r\n                    progressDialog.setContentView(R.layout.progress_bar);\r\n                    progressDialog.show();\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public static List<SpecialityModel> getClassData() {\r\n        List<SpecialityModel> specialityModels = new ArrayList<>();\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 1\", \"1\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 2\", \"2\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 3\", \"3\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 4\", \"4\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 5\", \"5\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 6\", \"6\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 7\", \"7\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 8\", \"8\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 9 (UP Board)\", \"9\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 10 (UP Board)\", \"10\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 10 (ICSE Board)\", \"11\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 10 (ICSE Board)\", \"12\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 11 (UP Board)\", \"13\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 11 (UP Board)\", \"14\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 12 (ISE Board)\", \"15\", false));\r\n        specialityModels.add(new SpecialityModel(\"\", \"Class 12 (ISE Board)\", \"16\", false));\r\n        AppUtils.hideDialog();\r\n        return specialityModels;\r\n\r\n    }\r\n\r\n    public static void hideDialog() {\r\n        try {\r\n            if (progressDialog != null && progressDialog.isShowing()) {\r\n                progressDialog.dismiss();\r\n                progressDialog = null;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static String getJSONFromModel(Object o) {\r\n        Gson gson = new Gson();\r\n        String jsonString = gson.toJson(o);\r\n        try {\r\n            JSONObject request = new JSONObject(jsonString);\r\n            return request.toString();\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    public static void updateTeacherProfile(TeacherModel teacherModel, final ApiInterface apiInterface) {\r\n        Log.d(TAG, \"getUid: \" + getUid());\r\n        getFirestoreReference().collection(\"Users\").document(getUid()).update(getTeacherProfileMap(teacherModel))\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        apiInterface.onSuccess(\"Profile Updated Successfully !!\");\r\n                    }\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                apiInterface.onFailed(\"failed to upload Image, try again !!\");\r\n                Log.d(TAG, \"onFailureUpdateProfile: \" + e.getLocalizedMessage());\r\n            }\r\n        }).addOnCanceledListener(new OnCanceledListener() {\r\n            @Override\r\n            public void onCanceled() {\r\n                apiInterface.onFailed(\"cancel to update profile, try again !!\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private static Map<String, Object> getTeacherProfileMap(TeacherModel teacherModel) {\r\n        Map<String, Object> map = new HashMap<>();\r\n        map.put(\"image\", teacherModel.getImage());\r\n        map.put(\"name\", teacherModel.getName());\r\n        map.put(\"fatherName\", teacherModel.getFatherName());\r\n        map.put(\"email\", teacherModel.getEmail());\r\n        map.put(\"experience\", teacherModel.getExperience());\r\n        map.put(\"rating\", teacherModel.getRating());\r\n        map.put(\"review\", teacherModel.getReview());\r\n        map.put(\"speciality\", teacherModel.getSpeciality());\r\n        map.put(\"fee\", teacherModel.getFee());\r\n        map.put(\"perVisit\", teacherModel.getPerVisit());\r\n        map.put(\"degree\", teacherModel.getDegree());\r\n        map.put(\"collegeName\", teacherModel.getCollegeName());\r\n        map.put(\"address\", teacherModel.getAddress());\r\n        map.put(\"landMark\", teacherModel.getLandMark());\r\n        map.put(\"city\", teacherModel.getCity());\r\n        map.put(\"state\", teacherModel.getState());\r\n        map.put(\"aadharFrontImage\", teacherModel.getAadharFrontImage());\r\n        map.put(\"aadharBackImage\", teacherModel.getAadharBackImage());\r\n        Log.d(TAG, \"getTeacherProfileMap: \" + map);\r\n        return map;\r\n    }\r\n\r\n    public static void uploadImages(final List<Bitmap> bitmaps, final UploadImageInterface uploadImageInterface) {\r\n\r\n        final List<String> uploadedImageUrl = new ArrayList<>();\r\n        FirebaseStorage storage = FirebaseStorage.getInstance();\r\n        final StorageReference storageRef = storage.getReference();\r\n\r\n\r\n        for (uploadImageCounter = 0; uploadImageCounter < bitmaps.size(); uploadImageCounter++) {\r\n\r\n            final String STORAGE_PATH = \"aadhar_image/\" + getUid() + \"/\" + System.currentTimeMillis() + \".jpg\";\r\n            StorageReference spaceRef = storageRef.child(STORAGE_PATH);\r\n\r\n            Log.d(TAG, \"uploadImages: \" + uploadImageCounter);\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            bitmaps.get(uploadImageCounter).compress(Bitmap.CompressFormat.JPEG, 75, baos);\r\n            byte[] compressData = baos.toByteArray();\r\n            UploadTask uploadTask = spaceRef.putBytes(compressData);\r\n\r\n            uploadTask.addOnProgressListener(new OnProgressListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onProgress(@NonNull UploadTask.TaskSnapshot taskSnapshot) {\r\n                    //  double progress = (100.0 * taskSnapshot.getBytesTransferred()) / taskSnapshot.getTotalByteCount();\r\n                }\r\n            }).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    storageRef.child(STORAGE_PATH).getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            uploadedImageUrl.add(uri.toString());\r\n                            if (uploadImageCounter == (bitmaps.size())) {\r\n                                Log.d(TAG, \"onSuccessEqual: \" + uploadImageCounter);\r\n                                uploadImageInterface.onSuccess(uploadedImageUrl);\r\n                            } else Log.d(TAG, \"onSuccess: notEqual \" + uploadImageCounter);\r\n\r\n                        }\r\n                    });\r\n\r\n                }\r\n            }).addOnCanceledListener(new OnCanceledListener() {\r\n                @Override\r\n                public void onCanceled() {\r\n                    uploadImageInterface.onFailed(\"Upload cancelled, try again\");\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    uploadImageInterface.onFailed(\"failed to upload Image \" + e.getLocalizedMessage());\r\n                }\r\n            });\r\n            \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private void showPdf(String filePath) {\r\n        Intent intent = new Intent(Intent.ACTION_VIEW);\r\n        intent.setDataAndType(Uri.parse(filePath), \"application/pdf\");\r\n        try {\r\n\r\n        } catch (ActivityNotFoundException e) {\r\n            Log.d(TAG, \"showPdf: \" + e.getLocalizedMessage());\r\n        }\r\n    }\r\n\r\n    public static String parseDate(String inDate, String outPattern) {\r\n\r\n        String inputPattern = \"dd/MM/yy\";\r\n        SimpleDateFormat inputFormat = new SimpleDateFormat(inputPattern);\r\n        SimpleDateFormat outputFormat = new SimpleDateFormat(outPattern);\r\n\r\n        Date date = null;\r\n        String str = null;\r\n\r\n        try {\r\n            date = inputFormat.parse(inDate);\r\n            str = outputFormat.format(date);\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return str;\r\n\r\n    }\r\n\r\n\r\n    public static String getDayOfWeekDayFromDate(String date) {\r\n        String dayName = \"\";\r\n        SimpleDateFormat inFormat = new SimpleDateFormat(\"yyyy/MM/dd\");\r\n        try {\r\n            Date myDate = inFormat.parse(date);\r\n            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"EEE, MMM d\");\r\n            dayName = simpleDateFormat.format(myDate);\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return dayName;\r\n\r\n    }\r\n\r\n    public static String getCurrentDateInWeekMonthDayFormat() {\r\n\r\n        Date c = Calendar.getInstance().getTime();\r\n        System.out.println(\"Current Date => \" + c);\r\n\r\n        SimpleDateFormat df = new SimpleDateFormat(\"EEE, MMM d\");\r\n        String formattedDate = df.format(c);\r\n\r\n        return formattedDate;\r\n    }\r\n\r\n    public static void showToastSort(Context context, String text) {\r\n        if (mToast != null && mToast.getView().isShown()) {\r\n            mToast.cancel();\r\n        }\r\n        mToast = Toast.makeText(context, text, Toast.LENGTH_LONG);\r\n        mToast.show();\r\n    }\r\n\r\n    public static boolean isEmailValid(String email) {\r\n\r\n        boolean isValid = false;\r\n\r\n        String expression = \"^[\\\\w\\\\.-]+@([\\\\w\\\\-]+\\\\.)+[A-Z]{2,4}$\";\r\n        CharSequence inputStr = email;\r\n\r\n        Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);\r\n        Matcher matcher = pattern.matcher(inputStr);\r\n        if (matcher.matches()) {\r\n            isValid = true;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    public static void hideSoftKeyboard(Activity activity) {\r\n        if (activity != null) {\r\n            try {\r\n                @SuppressLint(\"WrongConstant\") InputMethodManager inputMethodManager = (InputMethodManager) activity.getSystemService(\"input_method\");\r\n                View view = activity.getCurrentFocus();\r\n                if (view != null) {\r\n                    IBinder binder = view.getWindowToken();\r\n                    if (binder != null) {\r\n                        inputMethodManager.hideSoftInputFromWindow(binder, 0);\r\n                    }\r\n                }\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        activity.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);\r\n\r\n    }\r\n\r\n    public static boolean isNetworkConnected(Context context) {\r\n        ConnectivityManager connectivity = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        if (connectivity != null) {\r\n            NetworkInfo info = connectivity.getActiveNetworkInfo();\r\n            if (info != null) {\r\n                if (info.getState() == NetworkInfo.State.CONNECTED) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public static String getDateInDMYFormatFromTimestamp(long currentTimeMillis) {\r\n        try {\r\n            String value = new java.text.SimpleDateFormat(\"yyyy-MM-dd\").\r\n                    format(new java.util.Date(currentTimeMillis));\r\n            return value;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    public static String getTimeFormat(long currentTimeMillis, String outFormat) {\r\n        try {\r\n            String value = new java.text.SimpleDateFormat(outFormat).\r\n                    format(new java.util.Date(currentTimeMillis));\r\n            return value;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public static Animation fadeIn(Activity activity) {\r\n        return AnimationUtils.loadAnimation(activity, R.anim.fade_in);\r\n    }\r\n\r\n    public static Animation fadeOut(Activity activity) {\r\n        return AnimationUtils.loadAnimation(activity, R.anim.fade_out);\r\n    }\r\n\r\n\r\n    public static void setString(String key, String value, Activity activity) {\r\n        SharedPreferences sharedpreferences = activity.getSharedPreferences(MY_PREFS_NAME, Context.MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedpreferences.edit();\r\n        editor.putString(key, value);\r\n        editor.commit();\r\n    }\r\n\r\n    public static void setBoolean(String key, boolean value, Activity activity) {\r\n        SharedPreferences sharedpreferences = activity.getSharedPreferences(MY_PREFS_NAME, Context.MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedpreferences.edit();\r\n        editor.putBoolean(key, value);\r\n        editor.commit();\r\n    }\r\n\r\n    public static String getString(String key, Activity activity) {\r\n        if (activity != null) {\r\n            SharedPreferences pref = activity.getSharedPreferences(MY_PREFS_NAME, MODE_PRIVATE);\r\n            return pref.getString(key, \"\");\r\n        } else return null;\r\n\r\n    }\r\n\r\n    public static boolean getBoolean(String key, Activity activity) {\r\n        SharedPreferences pref = activity.getSharedPreferences(MY_PREFS_NAME, MODE_PRIVATE);\r\n        return pref.getBoolean(key, true);\r\n    }\r\n\r\n    public static ArrayList<HashMap<String, String>> getNextWeekDay() {\r\n        ArrayList<HashMap<String, String>> list = new ArrayList<>();\r\n        HashMap<String, String> hashMap = new HashMap<>();\r\n        SimpleDateFormat sdfDate = new SimpleDateFormat(\"dd\", Locale.getDefault());\r\n        SimpleDateFormat sdfDay = new SimpleDateFormat(\"EEE\", Locale.getDefault());\r\n        SimpleDateFormat sdfDateSend = new SimpleDateFormat(\"yyyy/MM/dd\", Locale.getDefault());\r\n        for (int i = 0; i < 8; i++) {\r\n            hashMap = new HashMap<>();\r\n\r\n            Calendar calendar = Calendar.getInstance();\r\n            calendar.add(Calendar.DATE, i);\r\n            String date = sdfDate.format(calendar.getTime());\r\n            String day = sdfDay.format(calendar.getTime());\r\n            String dateSend = sdfDateSend.format(calendar.getTime());\r\n\r\n            hashMap.put(\"date\", date);\r\n            hashMap.put(\"day\", day);\r\n            hashMap.put(\"dateSend\", dateSend);\r\n\r\n            list.add(hashMap);\r\n\r\n        }\r\n        return list;\r\n    }\r\n\r\n\r\n    public static String getDayFromDate(String incomingDate) {\r\n        String inputPattern = \"dd/MM/yyyy\";\r\n        String outputPattern = \"EEE\";\r\n        SimpleDateFormat inputFormat = new SimpleDateFormat(inputPattern);\r\n        SimpleDateFormat outputFormat = new SimpleDateFormat(outputPattern);\r\n\r\n        Date date = null;\r\n        String str = null;\r\n\r\n        try {\r\n            date = inputFormat.parse(incomingDate);\r\n            str = outputFormat.format(date);\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return str;\r\n    }\r\n\r\n\r\n    public static JSONObject objectToJSONObject(Object object){\r\n        Object json = null;\r\n        JSONObject jsonObject = null;\r\n        try {\r\n            json = new JSONTokener(object.toString()).nextValue();\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        if (json instanceof JSONObject) {\r\n            jsonObject = (JSONObject) json;\r\n        }\r\n        return jsonObject;\r\n    }\r\n\r\n    public static JSONArray objectToJSONArray(Object object){\r\n        Object json = null;\r\n        JSONArray jsonArray = null;\r\n        try {\r\n            json = new JSONTokener(object.toString()).nextValue();\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        if (json instanceof JSONArray) {\r\n            jsonArray = (JSONArray) json;\r\n        }\r\n        return jsonArray;\r\n    }\r\n\r\n    public static String sdfFromTimeStamp(String outPattern) {\r\n        Date date = new Date();\r\n        Timestamp ts = new Timestamp(date.getTime());\r\n        SimpleDateFormat formatter = new SimpleDateFormat(outPattern);\r\n        System.out.println(formatter.format(ts));\r\n        return formatter.format(ts);\r\n    }\r\n\r\n    public static String getMonthFromDate(String incomingDate) {\r\n        String inputPattern = \"dd/MM/yyyy\";\r\n        String outputPattern = \"MMM\";\r\n        SimpleDateFormat inputFormat = new SimpleDateFormat(inputPattern);\r\n        SimpleDateFormat outputFormat = new SimpleDateFormat(outputPattern);\r\n\r\n        Date date = null;\r\n        String str = null;\r\n\r\n        try {\r\n            date = inputFormat.parse(incomingDate);\r\n            str = outputFormat.format(date);\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return str;\r\n    }\r\n\r\n    public static String getDateFromDate(String incomingDate) {\r\n        String inputPattern = \"dd/MM/yyyy\";\r\n        String outputPattern = \"dd\";\r\n        SimpleDateFormat inputFormat = new SimpleDateFormat(inputPattern);\r\n        SimpleDateFormat outputFormat = new SimpleDateFormat(outputPattern);\r\n\r\n        Date date = null;\r\n        String str = null;\r\n\r\n        try {\r\n            date = inputFormat.parse(incomingDate);\r\n            str = outputFormat.format(date);\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return str;\r\n    }\r\n\r\n\r\n    public static String getTimeAgo(long time) {\r\n        if (time < 1000000000000L) {\r\n            time *= 1000;\r\n        }\r\n        long now = System.currentTimeMillis();\r\n        if (time > now || time <= 0) {\r\n            return null;\r\n        }\r\n        final long diff = now - time;\r\n        if (diff < MINUTE_MILLIS) {\r\n            return \"just now\";\r\n        } else if (diff < 2 * MINUTE_MILLIS) {\r\n            return \"a minute ago\";\r\n        } else if (diff < 50 * MINUTE_MILLIS) {\r\n            return diff / MINUTE_MILLIS + \" minutes ago\";\r\n        } else if (diff < 90 * MINUTE_MILLIS) {\r\n            return \"an hour ago\";\r\n        } else if (diff < 24 * HOUR_MILLIS) {\r\n            return diff / HOUR_MILLIS + \" hours ago\";\r\n        } else if (diff < 48 * HOUR_MILLIS) {\r\n            return \"yesterday\";\r\n        } else {\r\n            return diff / DAY_MILLIS + \" days ago\";\r\n        }\r\n    }\r\n\r\n    public static String getDateInDMY(long timestamp) {\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"EEE, MMM d, ''yy\");\r\n        Calendar calendar = Calendar.getInstance();\r\n        calendar.setTimeInMillis((int) timestamp);\r\n        return formatter.format(calendar.getTime());\r\n    }\r\n\r\n\r\n    public static void getFcmToken(final Activity activity) {\r\n/*\r\n        FirebaseInstanceId.getInstance().getInstanceId().addOnSuccessListener(instanceIdResult -> {\r\n            String newToken = instanceIdResult.getToken();\r\n            setString(fcmToken, newToken, activity);\r\n            Log.e(\"newToken2\", newToken);\r\n        });*/\r\n\r\n    }\r\n\r\n\r\n    public static FirebaseUser getCurrentUser() {\r\n        return FirebaseAuth.getInstance().getCurrentUser();\r\n    }\r\n\r\n    public static FirebaseFirestore getFirestoreReference() {\r\n        return FirebaseFirestore.getInstance();\r\n    }\r\n\r\n    public static String getUid() {\r\n        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n        if (null != user)\r\n            return user.getUid();\r\n        else return null;\r\n    }\r\n\r\n    public static String getCurrencyFormat(double num) {\r\n        String COUNTRY = \"IN\";\r\n        String LANGUAGE = \"en\";\r\n        return NumberFormat.getCurrencyInstance(new Locale(LANGUAGE, COUNTRY)).format(num);\r\n    }\r\n\r\n    public static String getCurrencyFormat(long num) {\r\n        String COUNTRY = \"IN\";\r\n        String LANGUAGE = \"en\";\r\n        return NumberFormat.getCurrencyInstance(new Locale(LANGUAGE, COUNTRY)).format(num);\r\n    }\r\n\r\n    public static String getCurrencyFormat(String num) {\r\n        Double number = Double.parseDouble(num);\r\n        String COUNTRY = \"IN\";\r\n        String LANGUAGE = \"en\";\r\n        return NumberFormat.getCurrencyInstance(new Locale(LANGUAGE, COUNTRY)).format(number);\r\n\r\n    }\r\n\r\n    public static void showToolbar(Activity activity) {\r\n        Objects.requireNonNull(((AppCompatActivity) activity).getSupportActionBar()).show();\r\n    }\r\n\r\n    public static void hideToolbar(Activity activity) {\r\n        Objects.requireNonNull(((AppCompatActivity) activity).getSupportActionBar()).hide();\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/mytuition/utility/AppUtils.java	(revision 82d8ea87b98a2b5b69247f8b715290fd9e3346e1)
--+++ app/src/main/java/com/mytuition/utility/AppUtils.java	(date 1624871331380)
--@@ -9,7 +9,6 @@
-- import android.content.Intent;
-- import android.content.SharedPreferences;
-- import android.graphics.Bitmap;
---import android.graphics.drawable.BitmapDrawable;
-- import android.graphics.drawable.ColorDrawable;
-- import android.net.ConnectivityManager;
-- import android.net.NetworkInfo;
--@@ -32,7 +31,6 @@
-- import com.google.android.gms.tasks.OnSuccessListener;
-- import com.google.firebase.auth.FirebaseAuth;
-- import com.google.firebase.auth.FirebaseUser;
---import com.google.firebase.firestore.DocumentReference;
-- import com.google.firebase.firestore.FirebaseFirestore;
-- import com.google.firebase.storage.FirebaseStorage;
-- import com.google.firebase.storage.OnProgressListener;
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_6_28_2021_2_44_PM__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_6_28_2021_2_44_PM__Default_Changelist_.xml	(revision de09e59bbe5a479302c70f5a0f7dacab9b1c7dca)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_6_28_2021_2_44_PM__Default_Changelist_.xml	(revision de09e59bbe5a479302c70f5a0f7dacab9b1c7dca)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_6_28_2021_2_44_PM_[Default_Changelist]" date="1624871641397" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_28_2021_2_44_PM_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 6/28/2021 2:44 PM [Default Changelist]" />
--</changelist>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_7_7_2021_3_18_PM__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_7_7_2021_3_18_PM__Default_Changelist_.xml	(revision d314e12e08beff10c1e26afff476a3a2b0496440)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_7_7_2021_3_18_PM__Default_Changelist_.xml	(revision d314e12e08beff10c1e26afff476a3a2b0496440)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_7_7_2021_3_18_PM_[Default_Changelist]" date="1625651339120" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_7_7_2021_3_18_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 7/7/2021 3:18 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/java/com/mytuition/views/SplashScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mytuition.views;\r\n\r\nimport android.annotation.TargetApi;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport com.google.firebase.dynamiclinks.FirebaseDynamicLinks;\r\nimport com.mytuition.R;\r\nimport com.mytuition.databinding.SplashScreenBinding;\r\nimport com.mytuition.utility.AppConstant;\r\nimport com.mytuition.utility.AppUtils;\r\nimport com.mytuition.views.activity.ChooseLoginTypeScreen;\r\nimport com.mytuition.views.activity.ParentScreen;\r\nimport com.mytuition.views.activity.TeacherScreen;\r\n\r\nimport java.util.Locale;\r\n\r\nimport static com.mytuition.utility.AppUtils.fadeOut;\r\nimport static com.mytuition.utility.AppUtils.getCurrentUser;\r\nimport static com.mytuition.utility.Utils.LOGIN_TYPE;\r\nimport static com.mytuition.utility.Utils.LOGIN_TYPE_PARENT;\r\nimport static com.mytuition.utility.Utils.LOGIN_TYPE_TEACHER;\r\n\r\npublic class SplashScreen extends AppCompatActivity {\r\n    private static final String TAG = \"SplashScreen\";\r\n    private static final int ACTION_MANAGE_OVERLAY_PERMISSION_REQUEST_CODE = 101;\r\n    private static final int OVERLAY_REQUEST_CODE = 8877;\r\n    String loginType = LOGIN_TYPE_PARENT;\r\n    String notificationId, notificationType;\r\n\r\n    SplashScreenBinding binding;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = DataBindingUtil.setContentView(this, R.layout.splash_screen);\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        gerDynamicLinks();\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        binding.imageView12.setAnimation(fadeOut(this));\r\n        checkPermission();\r\n\r\n    }\r\n\r\n    private void updateUI() {\r\n        loginType = AppUtils.getString(LOGIN_TYPE, this);\r\n        new Handler().postDelayed(() -> {\r\n            Intent intent;\r\n            if (getCurrentUser() != null) {\r\n                getNotificationData();\r\n                if (loginType.equalsIgnoreCase(LOGIN_TYPE_PARENT)) {\r\n                    intent = new Intent(SplashScreen.this, ParentScreen.class)\r\n                            .putExtra(AppConstant.NOTIFICATION_TYPE, notificationType)\r\n                            .putExtra(AppConstant.NOTIFICATION_ID, notificationId);\r\n                } else if (loginType.equalsIgnoreCase(LOGIN_TYPE_TEACHER)) {\r\n                    intent = new Intent(SplashScreen.this, TeacherScreen.class);\r\n                } else intent = new Intent(SplashScreen.this, ChooseLoginTypeScreen.class);\r\n            } else {\r\n                intent = new Intent(SplashScreen.this, ChooseLoginTypeScreen.class);\r\n            }\r\n            SplashScreen.this.startActivity(intent);\r\n            SplashScreen.this.finish();\r\n        }, 3000);\r\n    }\r\n\r\n\r\n    public void checkPermission() {\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n            if (!Settings.canDrawOverlays(this)) {\r\n                if (\"xiaomi\".equals(Build.MANUFACTURER.toLowerCase(Locale.ROOT))) {\r\n                    final Intent intent = new Intent(\"miui.intent.action.APP_PERM_EDITOR\");\r\n                    intent.setClassName(\"com.miui.securitycenter\",\r\n                            \"com.miui.permcenter.permissions.PermissionsEditorActivity\");\r\n                    intent.putExtra(\"extra_pkgname\", getPackageName());\r\n                    new AlertDialog.Builder(this)\r\n                            .setTitle(\"Please Enable the additional permissions\")\r\n                            .setMessage(\"You will not receive notifications while the app is in background if you disable these permissions\")\r\n                            .setPositiveButton(\"Go to Settings\", new DialogInterface.OnClickListener() {\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    startActivity(intent);\r\n                                }\r\n                            })\r\n                            .setIcon(android.R.drawable.ic_dialog_info)\r\n                            .setCancelable(false)\r\n                            .show();\r\n                } else {\r\n                    Intent overlaySettings = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse(\"package:\" + getPackageName()));\r\n                    startActivityForResult(overlaySettings, OVERLAY_REQUEST_CODE);\r\n                }\r\n            }\r\n            else updateUI();\r\n        }\r\n        else updateUI();\r\n    }\r\n\r\n    @TargetApi(Build.VERSION_CODES.M)\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == ACTION_MANAGE_OVERLAY_PERMISSION_REQUEST_CODE) {\r\n            if (!Settings.canDrawOverlays(this)) {\r\n                // You don't have permission\r\n                checkPermission();\r\n            } else {\r\n                // Do as per your logic\r\n                updateUI();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public void getNotificationData() {\r\n        if (null != getIntent().getExtras()) {\r\n            for (String key : getIntent().getExtras().keySet()) {\r\n                if (key.equals(\"id\")) {\r\n                    Log.d(TAG, \"id \" + getIntent().getExtras().getString(key));\r\n                    notificationId = getIntent().getExtras().getString(key);\r\n                }\r\n                if (key.equals(\"notificationType\")) {\r\n                    Log.d(TAG, \"notificationType \" + getIntent().getExtras().getString(key));\r\n                    notificationType = getIntent().getExtras().getString(key);\r\n                }\r\n            }\r\n\r\n        } else Log.d(TAG, \"getData: null\");\r\n    }\r\n\r\n\r\n    public void gerDynamicLinks() {\r\n        FirebaseDynamicLinks.getInstance()\r\n                .getDynamicLink(getIntent())\r\n                .addOnSuccessListener(this, pendingDynamicLinkData -> {\r\n                    Uri deepLink = null;\r\n                    if (pendingDynamicLinkData != null) {\r\n                        deepLink = pendingDynamicLinkData.getLink();\r\n                        Log.d(TAG, \"getDynamicLink: onSuccess: \" + deepLink);\r\n                        Log.d(TAG, \"invitationCode => : \" + pendingDynamicLinkData.getLink().getQueryParameter(\"invitationCode\"));\r\n                    }\r\n                })\r\n                .addOnFailureListener(this, e -> Log.w(TAG, \"getDynamicLink:onFailure\", e));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/mytuition/views/SplashScreen.java	(revision d314e12e08beff10c1e26afff476a3a2b0496440)
+++ app/src/main/java/com/mytuition/views/SplashScreen.java	(date 1626065445616)
@@ -94,11 +94,7 @@
                     new AlertDialog.Builder(this)
                             .setTitle("Please Enable the additional permissions")
                             .setMessage("You will not receive notifications while the app is in background if you disable these permissions")
-                            .setPositiveButton("Go to Settings", new DialogInterface.OnClickListener() {
-                                public void onClick(DialogInterface dialog, int which) {
-                                    startActivity(intent);
-                                }
-                            })
+                            .setPositiveButton("Go to Settings", (dialog, which) -> startActivity(intent))
                             .setIcon(android.R.drawable.ic_dialog_info)
                             .setCancelable(false)
                             .show();
Index: app/src/main/res/layout/activity_incoming_call.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_incoming_call.xml	(date 1626065206780)
+++ app/src/main/res/layout/activity_incoming_call.xml	(date 1626065206780)
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@drawable/incoming_call_gradient"
+    tools:context=".videoCall.IncomingCallActivity">
+
+    <TextView
+        android:textColor="@color/white"
+        android:fontFamily="@font/rubik"
+        android:textSize="22dp"
+        android:id="@+id/textView52"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="100dp"
+        android:text="Incoming Video Call"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+        android:textColor="@color/white"
+        android:fontFamily="@font/rubik"
+        android:textSize="24sp"
+        android:id="@+id/textView53"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="150dp"
+        android:text="Dr Rahata Ali Khan"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView52" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/mytuition/notification/FirebaseMessageService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mytuition.notification;\r\n\r\nimport android.app.Notification;\r\nimport android.app.NotificationChannel;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Color;\r\nimport android.media.Ringtone;\r\nimport android.media.RingtoneManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.app.NotificationCompat;\r\nimport androidx.navigation.NavDeepLinkBuilder;\r\n\r\nimport com.google.firebase.messaging.FirebaseMessagingService;\r\nimport com.google.firebase.messaging.RemoteMessage;\r\nimport com.mytuition.R;\r\nimport com.mytuition.VideocallBroadcast;\r\nimport com.mytuition.utility.App;\r\nimport com.mytuition.utility.AppConstant;\r\nimport com.mytuition.views.activity.ParentScreen;\r\nimport com.mytuition.views.activity.TeacherScreen;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.Date;\r\nimport java.util.Map;\r\n\r\nimport static android.content.Intent.FLAG_ACTIVITY_NEW_TASK;\r\n\r\npublic class FirebaseMessageService extends FirebaseMessagingService {\r\n\r\n    private static final String TAG = \"FirebaseMessageService\";\r\n    final String CHANNEL_ID = \"com.mytuition\";\r\n    Bitmap bitmap;\r\n    Context context;\r\n    int destinationId;\r\n    private NotificationManager mManager;\r\n    VideocallBroadcast videocallBroadcast;\r\n\r\n    @Override\r\n    public void onMessageReceived(RemoteMessage remoteMessage) {\r\n        Log.d(TAG, \"onMessageReceivedData: \" + remoteMessage.getData());\r\n\r\n        try {\r\n            if (remoteMessage.getData().get(\"notificationType\").equalsIgnoreCase(\"tuitionDetail\"))\r\n                showDemoCallNotification();\r\n            else\r\n                showNotification(remoteMessage.getData());\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            Log.d(TAG, \"onMessageReceived: error \" + e.getLocalizedMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void showDemoCallNotification() {\r\n        Intent intent = new Intent();\r\n        intent.setClassName(\"com.mytuition\", \"com.mytuition.views.activity.IncomingCallScreen\");\r\n        intent.addFlags(FLAG_ACTIVITY_NEW_TASK);\r\n        App.context.startActivity(intent);\r\n    }\r\n\r\n    private void showNotification(Map<String, String> data) throws JSONException {\r\n\r\n        JSONObject json = new JSONObject(data);\r\n        try {\r\n            String title = json.getString(\"title\");\r\n            String msg = json.getString(\"body\");\r\n            String id = json.getString(\"id\");\r\n            String notificationType = json.getString(\"notificationType\");\r\n\r\n            Bundle bundle = new Bundle();\r\n\r\n\r\n            //if body || title null or empty return\r\n           /* if (null == msg && msg.isEmpty() && null == title && title.isEmpty())\r\n                return;*/\r\n\r\n            if (notificationType.equalsIgnoreCase(AppConstant.NOTIFICATION_TUITION_DETAIL)) {\r\n                destinationId = R.id.DetailsFragment2;\r\n                bundle.putString(\"tuitionId\", id);\r\n            }\r\n\r\n            PendingIntent pendingIntent = new NavDeepLinkBuilder(null == ParentScreen.getInstance() ? TeacherScreen.getInstance() : ParentScreen.getInstance())\r\n                    .setGraph(R.navigation.parent_nav)\r\n                    .setDestination(destinationId)\r\n                    .setArguments(bundle)\r\n                    .createPendingIntent();\r\n\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n                NotificationChannel androidChannel = new NotificationChannel(CHANNEL_ID,\r\n                        title, NotificationManager.IMPORTANCE_HIGH);\r\n                androidChannel.enableLights(true);\r\n                androidChannel.enableVibration(true);\r\n                androidChannel.setLightColor(Color.GREEN);\r\n\r\n                androidChannel.setLockscreenVisibility(Notification.VISIBILITY_PUBLIC);\r\n                getManager().createNotificationChannel(androidChannel);\r\n\r\n                NotificationCompat.Builder notification = new NotificationCompat.Builder(getApplicationContext(), CHANNEL_ID)\r\n                        .setSmallIcon(R.mipmap.ic_launcher)\r\n                        .setContentTitle(title)\r\n                        .setContentText(msg)\r\n                        .setStyle(new NotificationCompat.BigTextStyle().bigText(msg))\r\n                        .setAutoCancel(true)\r\n                        .setContentIntent(pendingIntent);\r\n\r\n                if (bitmap != null) {\r\n                    notification.setLargeIcon(bitmap);\r\n                }\r\n\r\n                //int timestamp = 1000;\r\n                int timestamp = (int) ((new Date().getTime() / 1000L) % Integer.MAX_VALUE);\r\n\r\n                getManager().notify(timestamp, notification.build());\r\n\r\n                playNotificationSound();\r\n\r\n            } else {\r\n                try {\r\n                    playNotificationSound();\r\n                    NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(context)\r\n                            .setSmallIcon(R.mipmap.ic_launcher)\r\n                            .setContentTitle(title)\r\n                            .setContentText(msg)\r\n                            .setAutoCancel(true)\r\n                            .setPriority(NotificationCompat.PRIORITY_HIGH)\r\n                            .setStyle(new NotificationCompat.BigTextStyle().bigText(msg))\r\n                            .setContentIntent(pendingIntent)\r\n                            .setDefaults(Notification.DEFAULT_ALL)\r\n                            .setLights(0xFF760193, 300, 1000)\r\n                            .setVibrate(new long[]{200, 400});\r\n\r\n                    if (bitmap != null) {\r\n                        notificationBuilder.setLargeIcon(bitmap);\r\n                    }\r\n                    int timestamp = (int) ((new Date().getTime() / 1000L) % Integer.MAX_VALUE);\r\n                    NotificationManager notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\r\n                    notificationManager.notify(timestamp, notificationBuilder.build());\r\n                } catch (SecurityException se) {\r\n                    se.printStackTrace();\r\n                    Log.d(TAG, \"createNotification: \" + se.getLocalizedMessage());\r\n                }\r\n            }\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            Log.d(TAG, \"showNotification: \" + e.getLocalizedMessage());\r\n        }\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onNewToken(@NonNull String s) {\r\n        super.onNewToken(s);\r\n        Log.d(TAG, \"onNewToken: \" + s);\r\n    }\r\n\r\n    public void playNotificationSound() {\r\n        try {\r\n            Uri notificationSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);\r\n            Ringtone r = RingtoneManager.getRingtone(this, notificationSoundUri);\r\n            r.play();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private NotificationManager getManager() {\r\n        if (mManager == null) {\r\n            mManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\r\n        }\r\n        return mManager;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/mytuition/notification/FirebaseMessageService.java	(revision d314e12e08beff10c1e26afff476a3a2b0496440)
+++ app/src/main/java/com/mytuition/notification/FirebaseMessageService.java	(date 1626065445606)
@@ -44,7 +44,6 @@
     Context context;
     int destinationId;
     private NotificationManager mManager;
-    VideocallBroadcast videocallBroadcast;
 
     @Override
     public void onMessageReceived(RemoteMessage remoteMessage) {
Index: app/src/main/java/com/mytuition/videoCall/IncomingCallActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/mytuition/videoCall/IncomingCallActivity.java	(date 1626065206627)
+++ app/src/main/java/com/mytuition/videoCall/IncomingCallActivity.java	(date 1626065206627)
@@ -0,0 +1,46 @@
+package com.mytuition.videoCall;
+
+import android.media.Ringtone;
+import android.media.RingtoneManager;
+import android.net.Uri;
+import android.os.Bundle;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import com.mytuition.R;
+
+public class IncomingCallActivity extends AppCompatActivity {
+
+    Ringtone r;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_incoming_call);
+    }
+
+
+    @Override
+    protected void onStart() {
+        super.onStart();
+        playNotificationSound();
+    }
+
+    @Override
+    protected void onStop() {
+        super.onStop();
+
+        if (null != r)
+            r.stop();
+    }
+
+    public void playNotificationSound() {
+        try {
+            Uri notificationSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_RINGTONE);
+            r = RingtoneManager.getRingtone(this, notificationSoundUri);
+            r.play();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+}
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.mytuition\"\r\n        minSdkVersion 26\r\n        targetSdkVersion 30\r\n        versionCode 3\r\n        versionName \"2.1\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    buildFeatures {\r\n        dataBinding true\r\n        viewBinding true\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.navigation:navigation-fragment:2.3.3'\r\n    implementation 'androidx.navigation:navigation-ui:2.3.3'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-firestore:22.1.1'\r\n    implementation 'com.google.firebase:firebase-database:19.6.0'\r\n\r\n    implementation 'com.google.firebase:firebase-storage:19.2.1'\r\n    implementation 'com.google.firebase:firebase-messaging:21.1.0'\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n/*    implementation platform('com.google.firebase:firebase-bom:28.2.0')\r\n    implementation 'com.google.firebase:firebase-inappmessaging-display'\r\n    implementation 'com.google.firebase:firebase-analytics'*/\r\n\r\n\r\n    implementation 'com.google.firebase:firebase-inappmessaging-display:20.0.0'\r\n    implementation 'com.google.firebase:firebase-analytics:19.0.0'\r\n\r\n\r\n    implementation 'com.airbnb.android:lottie:3.4.2'\r\n\r\n    //Retrofit\r\n    /*implementation 'com.squareup.retrofit2:retrofit:2.7.2'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.7.2'*/\r\n    implementation 'com.squareup.retrofit2:retrofit:2.4.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'\r\n\r\n    //Image Picker\r\n    implementation 'com.github.dhaval2404:imagepicker:1.8'\r\n\r\n    implementation 'com.firebaseui:firebase-ui-auth:6.4.0'\r\n    implementation 'com.google.firebase:firebase-auth:19.0.0'\r\n\r\n    //Circle ImageView\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n\r\n    //Glide\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n\r\n    //BannerSlider\r\n    implementation 'com.ss.bannerslider:bannerslider:2.0.0'\r\n\r\n    //Lottie\r\n    implementation 'com.airbnb.android:lottie:3.4.2'\r\n\r\n    //Stepper\r\n    implementation 'com.ernestoyaquello.stepperform:vertical-stepper-form:0.9.9'\r\n\r\n    //CircleImageView\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n\r\n    //for Location\r\n    implementation \"com.google.android.gms:play-services-location:18.0.0\"\r\n\r\n\r\n    implementation 'com.google.android.gms:play-services-ads:19.7.0'\r\n\r\n    implementation 'com.github.GrenderG:Toasty:1.5.0'\r\n\r\n    apply plugin: \"androidx.navigation.safeargs\"\r\n\r\n    //slider dot Indicator\r\n    implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:4.1.2'\r\n\r\n\r\n    // FirebaseUI for Cloud FireStore\r\n    implementation 'com.firebaseui:firebase-ui-firestore:7.1.1'\r\n\r\n    //for paging Rec\r\n    implementation 'android.arch.paging:runtime:2.1.1'\r\n\r\n\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n\r\n\r\n    // Dagger\r\n    def dagger_version = \"2.28.3\"\r\n\r\n    // Dagger2 core\r\n    implementation \"com.google.dagger:dagger:$dagger_version\"\r\n    annotationProcessor \"com.google.dagger:dagger-compiler:$dagger_version\"\r\n    implementation \"com.google.dagger:dagger-android-support:$dagger_version\"\r\n\r\n    // Dagger Android\r\n    implementation \"com.google.dagger:dagger-android:2.35.1\"\r\n    implementation \"com.google.dagger:dagger-android-support:$dagger_version\"\r\n    annotationProcessor \"com.google.dagger:dagger-android-processor:$dagger_version\"\r\n\r\n    // ViewModel and LiveData\r\n    def lifecycle_version = '2.2.0-alpha03'\r\n    implementation \"androidx.lifecycle:lifecycle-extensions:$lifecycle_version\"\r\n\r\n\r\n    //Lottie\r\n    implementation 'com.airbnb.android:lottie:3.4.2'\r\n\r\n\r\n    //for Deep link\r\n    implementation 'com.google.firebase:firebase-dynamic-links:20.1.0'\r\n    implementation 'com.google.firebase:firebase-analytics:19.0.0'\r\n\r\n    apply plugin: 'com.google.firebase.crashlytics'\r\n\r\n    // Declare the dependencies for the Crashlytics and Analytics libraries\r\n    implementation 'com.google.firebase:firebase-crashlytics:18.1.0'\r\n    implementation 'com.google.firebase:firebase-analytics:19.0.0'\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision d314e12e08beff10c1e26afff476a3a2b0496440)
+++ app/build.gradle	(date 1626161670048)
@@ -147,7 +147,6 @@
 
     // Declare the dependencies for the Crashlytics and Analytics libraries
     implementation 'com.google.firebase:firebase-crashlytics:18.1.0'
-    implementation 'com.google.firebase:firebase-analytics:19.0.0'
 
 
 
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.mytuition\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission\r\n        android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\r\n        tools:ignore=\"ScopedStorage\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n\r\n    <uses-permission android:name=\"android.permission.USE_FULL_SCREEN_INTENT\" />\r\n\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <uses-permission android:name=\"android.permission.USE_FULL_SCREEN_INTENT\" />\r\n    <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\" />\r\n\r\n    <application\r\n        android:name=\".utility.App\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:requestLegacyExternalStorage=\"true\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity\r\n            android:name=\".views.activity.IncomingCallScreen\"\r\n            android:launchMode=\"singleInstance\" />\r\n        <activity\r\n            android:name=\".views.activity.TeacherSignUpActivity\"\r\n            android:label=\"@string/title_activity_teacher_signup\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity\r\n            android:name=\".views.activity.RegistrationActivity\"\r\n            android:theme=\"@style/AppTheme.NoToolbar\" />\r\n        <activity android:name=\".views.activity.TeacherScreen\" />\r\n        <activity android:name=\".views.activity.ParentScreen\" />\r\n        <activity\r\n            android:name=\".views.activity.ChooseLoginTypeScreen\"\r\n            android:theme=\"@style/AppTheme.NoToolbar\" />\r\n        <activity\r\n            android:name=\".views.SplashScreen\"\r\n            android:theme=\"@style/AppTheme.NoToolbar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <service android:name=\".utility.GetAddressIntentService\" />\r\n        <service\r\n            android:name=\".notification.FirebaseMessageService\"\r\n            android:directBootAware=\"true\"\r\n            android:exported=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.default_notification_channel_id\"\r\n            android:value=\"@string/default_notification_channel_id\" />\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n\r\n        <service\r\n            android:name=\".utility.FirebaseMessageService\"\r\n            android:exported=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n\r\n        <receiver android:name=\".VideocallBroadcast\" />\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.ads.APPLICATION_ID\"\r\n            android:value=\"ca-app-pub-4669458320732543~4109540636\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision d314e12e08beff10c1e26afff476a3a2b0496440)
+++ app/src/main/AndroidManifest.xml	(date 1626067342940)
@@ -7,13 +7,17 @@
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+
+    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
+
+
     <uses-permission
         android:name="android.permission.WRITE_EXTERNAL_STORAGE"
         tools:ignore="ScopedStorage" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
 
     <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT" />
-
     <uses-permission android:name="android.permission.WAKE_LOCK" />
     <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT" />
     <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
@@ -27,6 +31,8 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
+        <activity android:name=".videoCall.IncomingCallActivity"
+            android:theme="@style/AppTheme.NoToolbar"/>
         <activity
             android:name=".views.activity.IncomingCallScreen"
             android:launchMode="singleInstance" />
Index: app/src/main/res/drawable/incoming_call_gradient.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/incoming_call_gradient.xml	(date 1626065206786)
+++ app/src/main/res/drawable/incoming_call_gradient.xml	(date 1626065206786)
@@ -0,0 +1,7 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <gradient
+        android:startColor="@color/colorAccent"
+        android:endColor="@color/colorPrimary"
+        android:angle="-270" />
+</shape>
\ No newline at end of file
